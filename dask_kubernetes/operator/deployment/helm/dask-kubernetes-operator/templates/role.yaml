{{- if and .Values.rbac.create (not .Values.rbac.cluster) }}
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "dask_kubernetes_operator.serviceAccountName" . }}-role
rules:
  # Framework: knowing which other operators are running (i.e. peering).
  - apiGroups: [kopf.dev]
    resources: [clusterkopfpeerings]
    verbs: [list, watch, patch, get]

  # Framework: runtime observation of namespaces & CRDs (addition/deletion).
  - apiGroups: [apiextensions.k8s.io]
    resources: [customresourcedefinitions]
    verbs: [list, watch]
  - apiGroups: [""]
    resources: [namespaces]
    verbs: [list, watch]

  # Framework: admission webhook configuration management.
  - apiGroups:
      [admissionregistration.k8s.io/v1, admissionregistration.k8s.io/v1beta1]
    resources: [validatingwebhookconfigurations, mutatingwebhookconfigurations]
    verbs: [create, patch]

  # Application: watching & handling for the custom resource we declare.
  - apiGroups: [kubernetes.dask.org]
    resources: [daskclusters, daskworkergroups, daskjobs, daskjobs/status, daskautoscalers, daskworkergroups/scale]
    verbs: [get, list, watch, patch, create, delete]

  # Application: other resources it produces and manipulates.
  # Here, we create/delete Pods.
  - apiGroups: [""]
    resources: [pods, pods/status]
    verbs: ["*"]

  - apiGroups: [""]
    resources: [services, services/status]
    verbs: ["*"]

  - apiGroups: ["", events.k8s.io]
    resources: [events]
    verbs: ["*"]
{{- end }}
