// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/dask/dask-kubernetes/v2024/dask_kubernetes/operator/go_client/pkg/apis/kubernetes.dask.org/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// DaskWorkerGroupLister helps list DaskWorkerGroups.
// All objects returned here must be treated as read-only.
type DaskWorkerGroupLister interface {
	// List lists all DaskWorkerGroups in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.DaskWorkerGroup, err error)
	// DaskWorkerGroups returns an object that can list and get DaskWorkerGroups.
	DaskWorkerGroups(namespace string) DaskWorkerGroupNamespaceLister
	DaskWorkerGroupListerExpansion
}

// daskWorkerGroupLister implements the DaskWorkerGroupLister interface.
type daskWorkerGroupLister struct {
	indexer cache.Indexer
}

// NewDaskWorkerGroupLister returns a new DaskWorkerGroupLister.
func NewDaskWorkerGroupLister(indexer cache.Indexer) DaskWorkerGroupLister {
	return &daskWorkerGroupLister{indexer: indexer}
}

// List lists all DaskWorkerGroups in the indexer.
func (s *daskWorkerGroupLister) List(selector labels.Selector) (ret []*v1.DaskWorkerGroup, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.DaskWorkerGroup))
	})
	return ret, err
}

// DaskWorkerGroups returns an object that can list and get DaskWorkerGroups.
func (s *daskWorkerGroupLister) DaskWorkerGroups(namespace string) DaskWorkerGroupNamespaceLister {
	return daskWorkerGroupNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DaskWorkerGroupNamespaceLister helps list and get DaskWorkerGroups.
// All objects returned here must be treated as read-only.
type DaskWorkerGroupNamespaceLister interface {
	// List lists all DaskWorkerGroups in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.DaskWorkerGroup, err error)
	// Get retrieves the DaskWorkerGroup from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.DaskWorkerGroup, error)
	DaskWorkerGroupNamespaceListerExpansion
}

// daskWorkerGroupNamespaceLister implements the DaskWorkerGroupNamespaceLister
// interface.
type daskWorkerGroupNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DaskWorkerGroups in the indexer for a given namespace.
func (s daskWorkerGroupNamespaceLister) List(selector labels.Selector) (ret []*v1.DaskWorkerGroup, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.DaskWorkerGroup))
	})
	return ret, err
}

// Get retrieves the DaskWorkerGroup from the indexer for a given namespace and name.
func (s daskWorkerGroupNamespaceLister) Get(name string) (*v1.DaskWorkerGroup, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("daskworkergroup"), name)
	}
	return obj.(*v1.DaskWorkerGroup), nil
}
